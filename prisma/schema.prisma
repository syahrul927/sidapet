// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  // NOTE: When using mysql or sqlserver, uncomment the @db.Text annotations in model Account below
  // Further reading:
  // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
  // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
  url      = env("DATABASE_URL")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id          String    @id @default(cuid())
  name        String
  email       String    @unique
  password    String
  phoneNumber String?
  createdDate DateTime  @default(now())
  updatedDate DateTime? @updatedAt
  sessions    Session[]
}

model RequestDocument {
  id                     String                   @id @unique @default(cuid())
  documentCode           String // code document contoh: SKU
  documentId             String //
  documentConter         String
  templatePath           String
  formatDocument         Json
  status                 Status
  ownerPhone             String
  ownerName              String?
  createdDate            DateTime                 @default(now())
  updatedDate            DateTime                 @default(now()) @updatedAt
  createdBy              String
  updatedBy              String
  RequestDocumentHistory RequestDocumentHistory[]

  @@index([status, createdDate(sort: Asc)])
}

model RequestDocumentHistory {
  id                String          @id @unique @default(cuid())
  RequestDocument   RequestDocument @relation(fields: [requestDocumentId], references: [id], onDelete: Cascade)
  status            Status
  createdDate       DateTime        @default(now())
  createdBy         String
  requestDocumentId String
}

model CounterCategoryDocument {
  id      String @id @unique @default(cuid())
  code    String
  year    Int
  counter Int

  @@unique([code, year], name: "counterByCodeAndYear")
  @@index([code, year])
}

enum Status {
  NEW
  VALIDATED
  DONE
}
